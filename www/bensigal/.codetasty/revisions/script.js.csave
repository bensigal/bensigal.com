codetasty.revision.2.0
{"ts":1508814543,"restoring":false,"user_id":12307,"patch":[{"diffs":[[1,"var previousCommands = {\n    vals: [],\n    index: -1,\n    up: function(){\n        if(this.index < this.vals.length - 1){\n            return this.vals[++this.index];\n        }else{\n            return \"\";\n        }\n    }\n};\n\nfunction afterPlayerAction(){\n    enemies.forEach(function(element, index){\n        \n    });\n}\n\n$(function(){\n    \n    $(\"#command\").keypress(function(e){\n        \n        var specialKey = true;\n        switch(e.keyCode){\n            case 13:\n                submit($(this).val());\n                previousCommands.vals.push($(this).val());\n                $(this).val(\"\");\n                break;\n            default:\n                specialKey = false;\n        }\n        \n        if(specialKey)e.preventDefault();\n        \n    });\n    enterRoom(new IntroRoom());\n    \n});\n\nfunction submit(command){\n    command = _.escape(command);\n    command = command.replace(\"  \", \" \");\n    command = command.toLowerCase();\n    words = command.split(\" \");\n    $(\"#results\").append(\"<p>\"+span(\"echoCommand\", command)+\"</p><hr>\");\n    if(commands[words[0]]){\n        var op = commands[words.shift()];\n        op.trigger(words);\n    }else{\n        var result = room.command(words);\n        if(result === false){\n            $(\"#results\").append(\"<p>Command '\"+words[0]+\"' not found. Enter 'help' for a list of commands.\")\n        }\n    }\n}\n\nfunction capitalize(string){\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n\nfunction span(name, text){\n    return \"<span class='\"+name+\"'>\"+text+\"</span>\";\n}\n\nfunction println(line){\n    $(\"#results\").append(\"<p>\"+line+\"</p>\");\n    $(\"#results\")[0].scrollTop = $(\"#results\")[0].scrollHeight;\n}\n\nfunction camelCaseToWords(string){\n    string = string.replace(/[A-Z]/g, \" $&\");\n    return string.charAt(0).toUpperCase() + string.substring(1);\n}\n\nfunction d20(){\n    return Math.ceil(Math.random()*20);\n}\n\nfunction generateTable(){\n    var html = \"<table class='generatedTable'>\";\n    Array.from(arguments).forEach(function(row){\n        html+=\"<tr>\";\n        row.forEach(function(column){\n            html+=\"<td>\"+column+\"</td>\";\n        });\n        html+=\"</tr>\";\n    });\n    return html + \"</table>\";\n}"]],"start1":0,"start2":0,"length1":0,"length2":2172}],"length":2172}
{"ts":1508814612,"restoring":false,"user_id":12307,"patch":[{"diffs":[[0,"on(e"],[-1,"lement"],[1,"nemy"],[0,", in"]],"start1":279,"start2":279,"length1":14,"length2":12},{"diffs":[[0,"index){\n        "],[1,"enemy.takeAction();"],[0,"\n    });\n}\n\n$(fu"]],"start1":289,"start2":289,"length1":32,"length2":51}],"length":2189}
{"ts":1508816792,"restoring":false,"user_id":12307,"patch":[{"diffs":[[0,"  }\n};\n\n"],[1,"var enemies = [];\n"],[0,"function"]],"start1":215,"start2":215,"length1":16,"length2":34}],"length":2207}